==========云笔记==========
1.简介

互联网程序特点：
  a.用户量大--Tomcat集群
  b.信息量大--数据库集群,采用主从备份,读写分离
                    --数据表拆分
		    --非关系型数据库hbase,redis
		    --即使用关系型数据库，单表操作较多,mysql,oracle
  c.处理速度快
              --采用集群
	      --采用分布式部署-消息总线-跨机器调用组件
	      --应用缓存，数据缓存;页面缓存
  d.计算量大
              --采用hadoop等技术实现

采用传统方式完成：
服务器端处理:SpringMVC,SpringIOC,MyBatis
客户端:jQuery,Ajax（HTML）

a.全部采用HTML页面
b.全部采用Ajax发送HTTP请求

客户端(HTML)-->Ajax发送请求
-->Tomcat(服务器端)
-->SpringMVC+SpringIOC+Mybatis-->MySQL数据库
-->给Ajax返回JSON结果
-->Ajax调用回调函数将JSON结果显示到HTML页面

服务器返回JSON结果格式,统一为
{
  status:状态, //0表示成功,其他表示失败
  msg:消息,//成功或失败提示信息
  data:数据//要返回的数据
}

public class NoteResult{
  private int status;
  private String msg;
  private Object data;
}

导入MySQL数据库
set names utf8;
source cloud_note.sql文件位置;

============================
1.搭建SpringMVC+SpringIOC+Mybatis
 --引入jar包
   ioc,aop,dao,webmvc,json
   mybatis+驱动+dbcp
   mybatis-spring.jar
 --引入配置文件
   applicationContext.xml
 
 2.登录设计

 a.客户端
   1)发送Ajax请求
      --啥时候发送请求（点击登录按钮）
      --要提交的请求数据（用户名和密码）
   2)Ajax回调处理
      登录成功,进入edit.html
      登录失败,停留在log_in.html,显示错误提示
 b.服务器端
   接收请求返回JSON
   /user/login.do
   -->DispatcherServlet
   -->HandlerMapping
   -->LoginController.execute-->UserService.checkLogin
   -->UserDao-->cn_user(查询)
   -->调用jackson.jar返回json结果

if(user == null){
   用户名错误
}else{
   if(!user.getPassword.equals(pwd)){
      密码错误
   }else{
      密码和用户名正确
   }

}

